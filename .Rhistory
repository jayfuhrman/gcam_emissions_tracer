mutate(PrimaryFuelCO2Coef = if_else(is.na(PrimaryFuelCO2Coef) | fuel == 'biomass',0,PrimaryFuelCO2Coef),
fuel = if_else(is.na(fuel),PrimaryFuelCO2Coef.name,fuel),
c_input = value * PrimaryFuelCO2Coef) %>%
group_by(scenario,region,year,fuel) %>%
summarize(c_input = sum(c_input)) %>%
ungroup() -> H2_inputs
CO2_sequestration_by_tech %>%
filter(sector == 'H2 central production' | sector == 'H2 forecourt production') %>%
mutate(fuel = if_else(subsector == 'gas','natural gas',subsector)) %>%
rename(c_seq = value)-> H2_sequestration
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) -> H2_inputs_joined
View(H2_inputs)
View(H2_inputs_joined)
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) -> H2_inputs_joined
View(H2_inputs_joined)
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq) -> H2_inputs_joined
write.csv('H2_inputs_joined','H2_inputs_joined.csv')
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq) -> H2_inputs_joined
write.csv('H2_inputs_joined','H2_inputs_joined.csv')
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) -> H2_inputs_joined
write.csv(H2_inputs_joined,'H2_inputs_joined.csv')
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq) -> H2_inputs_joined
write.csv(H2_inputs_joined,'H2_inputs_joined.csv')
H2_inputs %>%
left_join(H2_sequestration,by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq) %>%
group_by(scenario,region,year) %>%
mutate(normfrac = emiss_no_bio/sum(emiss_no_bio)) -> H2_inputs_joined
write.csv(H2_inputs_joined,'H2_inputs_joined.csv')
write.csv(H2_inputs_joined,'H2_inputs_joined.csv')
H2_inputs %>%
left_join(H2_sequestration %>%
select(-sector,-subsector,-technology),by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq) %>%
group_by(scenario,region,year) %>%
mutate(normfrac = emiss_no_bio/sum(emiss_no_bio)) -> H2_inputs_joined
write.csv(H2_inputs_joined,'H2_inputs_joined.csv')
H2_inputs %>%
left_join(H2_sequestration %>%
select(-sector,-subsector,-technology),by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq,
transformation = 'H2 enduse') %>% #mutate to H2 production (the actual transformation) occurs at the end
group_by(scenario,region,year) %>%
mutate(normfrac = emiss_no_bio / sum(emiss_no_bio)) -> H2_inputs_joined
write.csv(H2_inputs_joined,'H2_inputs_joined.csv')
H2_inputs_joined %>%
left_join(H2_CO2_emiss, by = c('scenario','region','year','fuel')) -> H2_CO2_emiss_disag
H2_inputs_joined %>%
left_join(H2_CO2_emiss, by = c('scenario','region','year')) -> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
H2_inputs_joined %>%
left_join(H2_CO2_emiss %>%
select(-Units,-c_input,-c_seq,-emiss_no_bio), by = c('scenario','region','year')) -> H2_CO2_emiss_disag
H2_inputs_joined %>%
left_join(H2_CO2_emiss %>%
select(-Units), by = c('scenario','region','year')) %>%
select(-c_input,-c_seq,-emiss_no_bio)-> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
H2_inputs_joined %>%
left_join(H2_CO2_emiss %>%
select(-Units), by = c('scenario','region','year')) %>%
mutate(direct = fuel,
value = value * normfrac) %>%
select(-c_input,-c_seq,-emiss_no_bio) -> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
H2_inputs_joined %>%
left_join(H2_CO2_emiss %>%
select(-Units), by = c('scenario','region','year')) %>%
mutate(direct = fuel,
value = value * normfrac) %>%
select(-c_input,-c_seq,-emiss_no_bio,-fuel,-normfrac) -> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
H2_inputs %>%
left_join(H2_sequestration %>%
select(-sector,-subsector,-technology),by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq,
transformation = 'H2 enduse') %>% #mutate to H2 production (the actual transformation) occurs at the end
group_by(scenario,region,year) %>%
mutate(normfrac = emiss_no_bio / sum(emiss_no_bio)) %>%
select(-Units) -> H2_inputs_joined
H2_inputs_joined %>%
left_join(H2_CO2_emiss, by = c('scenario','region','year')) %>%
mutate(direct = fuel,
value = value * normfrac) %>%
select(-c_input,-c_seq,-emiss_no_bio,-fuel,-normfrac) -> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
write.csv(elec_CO2_disag,'output/emissions-GCAM_CWF-elec_trn_disag.csv')
H2_inputs %>%
left_join(H2_sequestration %>%
select(-sector,-subsector,-technology),by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq,
transformation = 'H2 enduse') %>% #mutate to H2 production (the actual transformation) occurs at the end
group_by(scenario,region,year) %>%
mutate(normfrac = emiss_no_bio / sum(emiss_no_bio)) %>%
select(-Units) -> H2_inputs_joined
H2_inputs_joined %>%
left_join(H2_CO2_emiss, by = c('scenario','region','year')) %>%
mutate(direct = fuel,
value = value * normfrac) %>%
select(-c_input,-c_seq,-emiss_no_bio,-fuel,-normfrac) -> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
H2_inputs %>%
left_join(H2_sequestration %>%
select(-sector,-subsector,-technology),by = c('scenario','region','year','fuel')) %>%
filter(!is.na(Units)) %>%
mutate(emiss_no_bio = c_input - c_seq) %>% #mutate to H2 production (the actual transformation) occurs at the end
group_by(scenario,region,year) %>%
mutate(normfrac = emiss_no_bio / sum(emiss_no_bio)) %>%
select(-Units) -> H2_inputs_joined
H2_inputs_joined %>%
left_join(H2_CO2_emiss, by = c('scenario','region','year')) %>%
mutate(direct = fuel,
value = value * normfrac) %>%
select(-c_input,-c_seq,-emiss_no_bio,-fuel,-normfrac) -> H2_CO2_emiss_disag
write.csv(H2_CO2_emiss_disag,'H2_CO2_emiss_disag.csv')
elec_CO2_disag <- bind_rows(all_emiss_no_elec_or_trn_no_H2_CO2,trn_tailpipe_CO2_disag,elec_CO2_no_bio_final,H2_CO2_emiss_disag) %>%
mutate(direct = if_else(direct == 'cement limestone','limestone',direct),
transformation = if_else(transformation == 'cement limestone','calcination',transformation),
enduse = if_else(enduse == 'cement limestone','cement',enduse)) %>%
mutate(direct = if_else((direct == 'gas processing') & (ghg == 'CO2'),'natural gas',direct),#assign all direct gas processing CO2 emissions to natural gas since we're using emissions no bio query and bio constitutes a very small fraction of gas processing anyway
direct = if_else(direct == 'H2 enduse','H2 production',direct),
transformation = if_else(transformation == 'H2 enduse','H2 production',transformation)) %>%
group_by(scenario,region,direct,transformation,enduse,year,ghg,Units) %>%
summarize(value = sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = year, values_from = value, values_fill = list(value = 0))
write.csv(elec_CO2_disag,'output/emissions-GCAM_CWF-elec_trn_disag.csv')
write.csv(all_emiss_no_elec_or_trn_no_H2_CO2,'all_emiss_no_elec_or_trn_no_H2_CO2.csv')
all_emiss_no_elec_or_trn_no_H2_CO2 %>%
filter(direct != 'refining' | ghg != 'CO2') -> all_emiss_no_elec_or_trn_no_H2_CO2
write.csv(all_emiss_no_elec_or_trn_no_H2_CO2,'all_emiss_no_elec_or_trn_no_H2_CO2.csv')
all_emiss_no_elec_or_trn_CO2 %>%
filter(direct != 'H2 enduse' | ghg != 'CO2') -> all_emiss_no_elec_or_trn_no_H2_CO2
all_emiss_no_elec_CO2 %>%
#  filter(((enduse %in% transport_sectors$transportation_subsector & direct == 'refining') | direct %in% transport_sectors$transportation_subsector)  & ghg == 'CO2') %>%
filter(direct == 'refining' & ghg == 'CO2') %>%
select(-transformation)-> trn_CO2
View(trn_CO2)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
all_emiss_no_elec_CO2 %>%
filter(((enduse %in% transport_sectors$transportation_subsector & direct == 'refining') | direct %in% transport_sectors$transportation_subsector)  & ghg == 'CO2') %>%
select(-transformation)-> trn_CO2
all_emiss_no_elec_or_trn_no_H2_CO2 %>%
filter(direct == 'refining' & ghg == 'CO2') -> industrial_refining_CO2
all_emiss_no_elec_or_trn_no_H2_CO2 %>%
filter(direct != 'refining' | ghg != 'CO2') -> all_emiss_no_elec_or_trn_no_H2_CO2
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
write.csv(industrial_refining_CO2,'industrial_refining_CO2.csv')
write.csv(refining_emiss_by_fuel_no_bio,'refining_emiss_by_fuel_no_bio.csv')
write.csv(refining_emiss_by_fuel_no_bio_norm,'refining_emiss_by_fuel_no_bio_norm.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(industrial_refining_CO2,by = c('scenario','region','year','ghg')) -> refining_emiss_disag
write.csv(refining_emiss_disag,'refining_emiss_disag.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(industrial_refining_CO2,by = c('scenario','region','year','ghg')) %>%
filter(!is.na(Units)) -> refining_emiss_disag
write.csv(refining_emiss_disag,'refining_emiss_disag.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(industrial_refining_CO2,by = c('scenario','region','year','ghg')) %>%
filter(!is.na(Units)) %>%
mutate(value = value * normfrac) -> refining_emiss_disag
write.csv(refining_emiss_disag,'refining_emiss_disag.csv')
write.csv(refining_emiss_disag,'refining_emiss_disag.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(industrial_refining_CO2,by = c('scenario','region','year','ghg')) %>%
filter(!is.na(Units)) %>%
mutate(value = value * normfrac,
direct = fuel) %>%
select(-normfrac,-fuel) -> refining_emiss_disag
write.csv(refining_emiss_disag,'refining_emiss_disag.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(industrial_refining_CO2,by = c('scenario','region','year','ghg')) %>%
filter(!is.na(Units)) %>%
mutate(value = value * normfrac,
direct = fuel) %>%
select(-normfrac,-fuel) -> refining_emiss_disag
write.csv(refining_emiss_disag,'refining_emiss_disag.csv')
elec_CO2_disag <- bind_rows(all_emiss_no_elec_or_trn_no_H2_CO2,
trn_tailpipe_CO2_disag,
elec_CO2_no_bio_final,
H2_CO2_emiss_disag,
refining_emiss_disag) %>%
mutate(direct = if_else(direct == 'cement limestone','limestone',direct),
transformation = if_else(transformation == 'cement limestone','calcination',transformation),
enduse = if_else(enduse == 'cement limestone','cement',enduse)) %>%
mutate(direct = if_else((direct == 'gas processing') & (ghg == 'CO2'),'natural gas',direct),#assign all direct gas processing CO2 emissions to natural gas since we're using emissions no bio query and bio constitutes a very small fraction of gas processing anyway
direct = if_else(direct == 'H2 enduse','H2 production',direct),
transformation = if_else(transformation == 'H2 enduse','H2 production',transformation)) %>%
group_by(scenario,region,direct,transformation,enduse,year,ghg,Units) %>%
summarize(value = sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = year, values_from = value, values_fill = list(value = 0))
write.csv(elec_CO2_disag,'output/emissions-GCAM_CWF-elec_trn_disag.csv')
elec_CO2_disag <- bind_rows(all_emiss_no_elec_or_trn_no_H2_CO2,
trn_tailpipe_CO2_disag,
elec_CO2_no_bio_final,
H2_CO2_emiss_disag,
refining_emiss_disag) %>%
mutate(direct = if_else(direct == 'cement limestone','limestone',direct),
transformation = if_else(transformation == 'cement limestone','calcination',transformation),
enduse = if_else(enduse == 'cement limestone','cement',enduse)) %>%
mutate(direct = if_else((direct == 'gas processing') & (ghg == 'CO2'),'natural gas',direct),#assign all direct gas processing CO2 emissions to natural gas since we're using emissions no bio query and bio constitutes a very small fraction of gas processing anyway
direct = if_else(direct == 'H2 enduse','H2 production',direct),
transformation = if_else(transformation == 'H2 enduse','H2 production',transformation)) %>%
group_by(scenario,region,direct,transformation,enduse,year,ghg,Units) %>%
summarize(value = sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = year, values_from = value, values_fill = list(value = 0))
write.csv(elec_CO2_disag,'output/emissions-GCAM_CWF-elec_trn_disag.csv')
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
write.csv(all_emiss_no_elec_or_trn_no_H2_CO2,'all_emiss_no_elec_or_trn_no_H2_CO2.csv')
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
filter(!(fuel %in% c('electricity','H2 enduse','refining','district heat'))) %>%
remaining_industry_inputs_no_transform
remaining_industry_inputs %>%
filter(!(fuel %in% c('electricity','H2 enduse','refining','district heat'))) %>%
remaining_industry_inputs_no_transform
remaining_industry_inputs %>%
filter(!(fuel %in% c('electricity','H2 enduse','refining','district heat'))) -> remaining_industry_inputs_no_transform
remaining_industry_inputs %>%
filter(fuel %in% c('electricity','H2 enduse','refining','district heat')) -> remaining_industry_inputs_transform
write.csv(remaining_industry_inputs_no_transform,'remaining_industry_inputs_no_transform.csv')
write.csv(remaining_industry_inputs_transform,'remaining_industry_inputs_transform.csv')
remaining_industry_CO2 %>%
filter(!(fuel %in% c('electricity','H2 enduse','refining','district heat'))) -> remaining_industry_CO2_no_transform
remaining_industry_CO2 %>%
filter(!(direct %in% c('electricity','H2 enduse','refining','district heat'))) -> remaining_industry_CO2_no_transform
remaining_industry_CO2 %>%
filter(direct %in% c('electricity','H2 enduse','refining','district heat')) -> remaining_industry_CO2_transform
View(remaining_industry_CO2_no_transform)
View(remaining_industry_CO2_transform)
write.csv(remaining_industry_CO2_no_transform,'remaining_industry_CO2_no_transform.csv')
write.csv(remaining_industry_CO2_transform,'remaining_industry_CO2_transform.csv')
inputs_by_subsector %>%
filter(sector %in% remaining_industry_CO2$direct) %>%
rename(PrimaryFuelCO2Coef.name = input) %>%
mutate(PrimaryFuelCO2Coef.name = if_else(PrimaryFuelCO2Coef.name == 'process heat dac','wholesale gas',PrimaryFuelCO2Coef.name)) %>%
left_join(ccoef_mapping,by = c('PrimaryFuelCO2Coef.name')) %>%
mutate(fuel = if_else(PrimaryFuelCO2Coef.name %in% c('elect_td_ind','elect_td_bld'),'electricity',
if_else(PrimaryFuelCO2Coef.name == 'H2 enduse','H2 enduse',
if_else(PrimaryFuelCO2Coef.name %in% c('refined liquids industrial','refined liquids enduse'),'refining',fuel))),
PrimaryFuelCO2Coef = if_else(is.na(PrimaryFuelCO2Coef),0,PrimaryFuelCO2Coef),
PrimaryFuelCO2Coef = if_else(fuel == 'biomass',0,PrimaryFuelCO2Coef),
c_input = value * PrimaryFuelCO2Coef) %>%
filter(!is.na(c_input)) %>%
group_by(scenario,region,sector,year) %>%
mutate(sum_c = sum(c_input),
normfrac = c_input/sum_c) %>%
ungroup() %>%
rename(direct = sector) -> remaining_industry_inputs
remaining_industry_CO2 %>%
filter(!(direct %in% c('electricity','H2 enduse','refining','district heat'))) -> remaining_industry_CO2_no_transform
remaining_industry_CO2 %>%
filter(direct %in% c('electricity','H2 enduse','refining','district heat')) -> remaining_industry_CO2_transform
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) %>%
filter(year >= 2005) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) -> tmp
write.csv(tmp,'tmp.csv')
write.csv(remaining_industry_CO2,'remaining_industry_CO2.csv')
all_emiss_no_elec_or_trn_no_H2_CO2 %>%
filter(!(direct %in% c_containing) & ghg == 'CO2')  -> remaining_industry_CO2
write.csv(remaining_industry_CO2,'remaining_industry_CO2.csv')
write.csv(remaining_industry_CO2,'remaining_industry_CO2.csv')
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
write.csv(remaining_industry_CO2,'remaining_industry_CO2.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) %>%
filter(year >= 2005,
!(direct %in% c('H2 enduse','electricity'))) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) -> tmp
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) %>%
filter(year >= 2005) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) -> tmp
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) %>%
filter(year >= 2005,
!(fuel %in% c('electricity','H2 enduse'))) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) -> tmp
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> tmp  #filter out since these are already accounted for elsewhere
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2,by = c('scenario','region','direct','year')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> tmp  #filter out since these are already accounted for elsewhere
write.csv(tmp,'tmp.csv')
remaining_industry_CO2 %>%
filter(!(direct %in% c('refining','district heat'))) -> remaining_industry_CO2_no_transform
remaining_industry_CO2 %>%
filter(direct %in% c('refining','district heat')) -> remaining_industry_CO2_transform
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> tmp  #filter out since these are already accounted for elsewhere
write.csv(tmp,'tmp.csv')
write.csv(tmp,'tmp.csv')
remaining_industry_CO2 %>%
filter(!(direct %in% c('refining','district heat'))) -> remaining_industry_CO2_no_transform
write.csv(remaining_industry_CO2_no_transform,'remaining_industry_CO2_no_transform.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) -> tmp
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','direct','year')) -> tmp
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','year')) -> tmp
write.csv(tmp,'tmp.csv')
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2_no_transform,by = c('scenario','region','year','direct')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> tmp  #filter out since these are already accounted for elsewhere
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2,by = c('scenario','region','year','direct')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> tmp  #filter out since these are already accounted for elsewhere
write.csv(tmp,'tmp.csv')
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2,by = c('scenario','region','year','direct')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> tmp  #filter out since these are already accounted for elsewhere
write.csv(tmp,'tmp.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2,by = c('scenario','region','year','direct')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> remaining_industry_disag_w_refining
write.csv(remaining_industry_disag_w_refining,'remaining_industry_disag_w_refining.csv')
remaining_industry_inputs %>%
select(-PrimaryFuelCO2Coef,-c_input,-sum_c,-PrimaryFuelCO2Coef.name,-subsector,-value,-Units) %>%
left_join(remaining_industry_CO2,by = c('scenario','region','year','direct')) %>%
mutate(value = value * normfrac,
value = if_else(is.na(value),0,value),
ghg = 'CO2',
Units = 'MTCO2e',
enduse = if_else(is.na(enduse),direct,enduse),
direct = fuel,
transformation = if_else(fuel == 'electricity' | fuel == 'H2 enduse' | fuel == 'refining' | fuel == 'district heat',fuel,transformation)) %>%
select(-normfrac,-fuel) %>%
filter(year >= 2005,
!(direct %in% c('electricity','H2 enduse'))) -> remaining_industry_disag_w_refining  #filter out electricity + hydrogen since these are already accounted for elsewhere
remaining_industry_disag_w_refining %>%
filter(direct == 'refining') -> refining_ind_for_disag
remaining_industry_disag_w_refining %>%
filter(direct != 'refining') -> remaining_industry_CO2_no_refining
write.csv(remaining_industry_CO2_no_refining,'remaining_industry_CO2_no_refining.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(refining_ind_for_disag,by = c('scenario','region','year','ghg')) -> tmp
write.csv(tmp,'tmp.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(refining_ind_for_disag,by = c('scenario','region','year','ghg')) %>%
filter(year >= 2005) -> tmp
write.csv(tmp,'tmp.csv')
refining_emiss_by_fuel_no_bio_norm %>%
left_join(refining_ind_for_disag,by = c('scenario','region','year','ghg')) %>%
filter(year >= 2005) %>%
mutate(direct = fuel,
value = value * normfrac) %>%
select(-fuel,-normfrac) -> tmp
write.csv(tmp,'tmp.csv')
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
write.csv(remaining_industry_refining_disag,'remaining_industry_refining_disag.csv')
write.csv(remaining_industry_CO2_no_refining,'remaining_industry_CO2_no_refining.csv')
write.csv(remaining_industry_disag,'remaining_industry_disag.csv')
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/main.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/functions.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/main.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/main.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/disagg_test.R', echo=TRUE)
source('~/GitHub/cwf_emissions_tracer/main.R', echo=TRUE)
View(all_emissions)
