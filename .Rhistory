# Load GCAM outputs
# ==============================================================================================
prj_data <- "GCAM.dat"
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
install.packages("rgcam")
install_github('JGCRI/rgcam', build_vignettes=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
install_github('JGCRI/rgcam', build_vignettes=FALSE)
install_github('JGCRI/rgcam', build_vignettes=FALSE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
library("devtools")
devtools::install_github('JGCRI/gcammaptools')
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
listQueries(prj, ref_scen)
# Begin formatting queries to match template format
# Scioeconomics
# ==============================================================================================
# population
getQuery(prj, "population by region") %>%
mutate(value = value * conv_thousand_million,
var = "Population") %>%
select(long_columns) ->
population_clean
# GDP
getQuery(prj, "GDP per capita PPP by region") %>%
left_join(population_clean %>% rename(pop_mill = value), by = c("scenario", "region", "year")) %>%
mutate(value = value * pop_mill * conv_90USD_10USD,
var = "GDP|PPP") %>%
select(long_columns) ->
GDP_PPP_clean
getQuery(prj, "GDP MER by region") %>%
mutate(value = value * conv_million_billion * conv_90USD_10USD,
var = "GDP|MER") %>%
select(long_columns) ->
GDP_MER_clean
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
paste0(src_dir, "/constants.R")
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
src_dir <- paste0(home_dir, "/src")
source(paste0(src_dir, "/constants.R"))
(paste0(src_dir, "/constants.R")
paste0(src_dir, "/constants.R")
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
warnings()
# define functions
source(paste0(src_dir, "/functions.R"))
# read in template and mapping files
source(paste0(src_dir, "/mapping.R"))
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
home_dir
gcam_dir
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
home_dir
gcam_dir
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warning()
warning()
warnings()
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/constants.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/constants.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
listQueries(prj)
View(prj)
View(prj)
View(prj)
listQueries()
listQueries(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
getQuery(prj, listQueries(prj)[3])
substr("population by region", 1,1) == substr(listQueries(prj)[3], 1,1)
substr("population by region", 1,1) == substr(listQueries(prj)[3], 1,1)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE, force=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE, force=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE, force=TRUE)
install_github('JGCRI/rgcam', build_vignettes=FALSE, force=TRUE)
install.packages("rmarkdown")
install_github('JGCRI/rgcam', build_vignettes=TRUE, force=TRUE)
install_github('JGCRI/rgcam', build_vignettes=FALSE, force=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
substr("population by region", 1,1) == substr(listQueries(prj)[3], 1,1)
substr("population by region", 2,2) == substr(listQueries(prj)[3], 2,2)
substr("population by region", 3,3) == substr(listQueries(prj)[3], 3,3)
substr("population by region", 4,4) == substr(listQueries(prj)[3], 4,4)
substr("population by region", 5,5) == substr(listQueries(prj)[3], 5,5)
len("population by region")
nchar("population by region")
for (n in nchar("population by region")){substr("population by region", n,n) == substr(listQueries(prj)[3], n,n)}
for (n in nchar("population by region")){print(substr("population by region", n,n) == substr(listQueries(prj)[3], n,n))}
for (n in seq(0,nchar("population by region"))){print(substr("population by region", n,n) == substr(listQueries(prj)[3], n,n))}
for (n in seq(0,nchar("population by region")+1)){print(substr("population by region", n,n) == substr(listQueries(prj)[3], n,n))}
for (n in seq(0,nchar("population by region"))){print(substr("population by region", n,n) == substr(listQueries(prj)[3], n,n))}
nchar("population by region") == nchar(listQueries(prj)[3])
nchar(listQueries(prj)[3])
listQueries(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
listQueries(prj)
prj
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
warnings()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(GCAM_DATA_WORLD)
View(GCAM_DATA_WORLD)
View(forcing_clean)
View(GCAM_DATA_wGLOBAL)
View(GCAM_DATA_wGLOBAL)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
rlang::last_error()
rlang::last_trace()
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(reporting_scen)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(prj)
View(prj)
View(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
# Reference scenario
ref_scen <- "constrained_wateradj_renunconv_oilCstorage_defaultdefault_offshore_cost1p5_low_os_p2_co2_only_noDAC"
source('~/GitHub/iamc-reporting/src/constants.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(carbon_seq_tech_map)
View(co2_sequestration_clean)
View(tot_co2_clean)
View(template)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(co2_clean)
View(co2_clean)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(prj)
View(prj)
View(prj)
View(prj)
View(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(primary_energy_map)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
pre -> read.csv("../output/GCAM_resultsClimate.csv")
pre <- read.csv("../output/GCAM_resultsClimate.csv")
View(pre)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(prj)
prj <- addMIBatchCSV(paste0(gcam_dir, "/low-cost_dac_high_os/IAMCreportingclimate.csv"), prj,clobber=TRUE)
saveProject(prj, paste0(out_dir, "/", prj_data))
prj <- addMIBatchCSV(paste0(gcam_dir, "/low-cost_dac_high_os/IAMCreportingclimate.csv"), prj,clobber=TRUE)
View(prj)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
prj <- loadProject(paste0(out_dir, "/", prj_data))
prj <- addMIBatchCSV(paste0(gcam_dir, "/low-cost_dac_high_os/all_queries_IAMCreportingprimaryen.csv"), prj,clobber=TRUE)
prj <- addMIBatchCSV(paste0(gcam_dir, "/high-cost_dac_low_os/IAMCreportingclimate.csv"), prj,clobber=TRUE)
prj <- addMIBatchCSV(paste0(gcam_dir, "/high-cost_dac_low-os/IAMCreportingclimate.csv"), prj,clobber=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
scenario_mapping <- read.csv("../mappings/scenario_mapping.csv")
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(scenario_mapping)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(prj)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
View(scenario_mapping)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(scenario_mapping)
View(pre)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(df1)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre2)
View(pre2)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre)
scenario_mapping$scenario
scenario_mapping$IAMC_scenario_name
View(scenario_mapping)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre2)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(df)
View(df1)
View(df)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(df)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre1)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(pre1)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(final)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(final)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/master.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/mapping.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R5)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R5)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R5)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R5)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
is.numeric(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
View(R10)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
install.packages("dplyr")
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/Postdoc/DAC CMP/_From Binsted, Matthew T/DAC_CMP_figs/diagnostics_water_2020.05.16.R', echo=TRUE)
source('~/Postdoc/DAC CMP/_From Binsted, Matthew T/DAC_CMP_figs/diagnostics_water_2020.05.16.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/GCAM_IAMC_reporting.R', echo=TRUE)
View(template)
GCAM_DATA %>%
filter(region != "World", # excl. Temperature|Forcing|Concentration
# excl. price and costs variables - already calculated global average
!grepl("Price|Capital Cost", var)) %>%
group_by(scenario, year, var) %>%
summarise(value = sum(value, na.rm = T)) %>%
ungroup %>%
mutate(region = "World") ->
GCAM_DATA_WORLD
GCAM_DATA_WORLD %>%
bind_rows(GCAM_DATA %>% filter(!(region == "World" & var %in% unique(GCAM_DATA_WORLD$var)))) %>%
complete(nesting(scenario, region, var), year = reporting_years) %>%
replace_na(list(value = 0)) ->
GCAM_DATA_wGLOBAL
template%>%
inner_join(GCAM_DATA_wGLOBAL %>%
na.omit %>%
spread(year, value), by = c("Variable" = "var")) %>%
#left_join( %>% select(GCAM_scenario, Scenario),
#          by = c("scenario" = "GCAM_scenario")) %>%
rename(Region = region) %>%
#select(reporting_columns) %>%
filter(!is.na(Region)) %>% # Drop variables we don't report
write.csv(file.path(out_dir, "GCAM_resultsERL_Sensitivity.csv"), row.names = FALSE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/GitHub/iamc-reporting/src/final_processing.R', echo=TRUE)
source('~/Postdoc/Climateworks CDR/Files/GCAM_EmissionsTracer/main.R', echo=TRUE)
